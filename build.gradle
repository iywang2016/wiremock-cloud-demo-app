
import mocklab.build.GithubReleasePublishTask
import mocklab.build.HerokuFatJarDeployTask

plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "net.foragerr.jmeter" version "1.1.0-4.0"
    id 'org.checkerframework' version '0.6.45'
}

apply plugin: 'org.checkerframework'

group = 'io.mocklab'
version =  '1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-oauth2-client'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-mustache'
    compile "org.springframework.boot:spring-boot-devtools"
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
    compile 'com.paypal.sdk:rest-api-sdk:+'
    compile 'com.google.guava:guava:31.0.1-jre'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.seleniumhq.selenium:selenium-api")
    testCompile 'org.seleniumhq.selenium:selenium-chrome-driver'
    testCompile('com.github.tomakehurst:wiremock-jre8:2.32.0')

    testCompile("junit:junit")
    testCompile('org.assertj:assertj-core:3.22.0')
}

// To use a locally-built Checker Framework, run gradle with "-PcfLocal".
if (project.hasProperty("cfLocal")) {
    def cfHome = String.valueOf(System.getenv("CHECKERFRAMEWORK"))
    dependencies {
        compileOnly files(cfHome + "/checker/dist/checker-qual.jar")
        testCompileOnly files(cfHome + "/checker/dist/checker-qual.jar")
        checkerFramework files(cfHome + "/checker/dist/checker.jar")
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    archiveName = 'mocklab-demo-app.jar'
}


def tag = System.getenv('CIRCLE_SHA1') ? "circle-${System.getenv('CIRCLE_BRANCH')}-${System.getenv('CIRCLE_SHA1')}" :
        (System.getenv('TAG') ?: "${InetAddress.localHost.hostName}-${System.currentTimeMillis()}")

def REPO_NAME = 'mocklab-demo-app'

task pushToGithub(type: GithubReleasePublishTask) {
    repoOwner 'mocklab'
    repository REPO_NAME
    tagName tag
    attachmentFilePath "${project.buildDir}/libs/mocklab-demo-app.jar"
}

task herokuDeploy(type: HerokuFatJarDeployTask) {
    repoOwner 'mocklab'
    repository REPO_NAME
    tagName tag
    herokuApp "mocklab-demo"
}

task buildAndDeploy {
    dependsOn clean, herokuDeploy, pushToGithub
}

pushToGithub.mustRunAfter assemble
herokuDeploy.mustRunAfter pushToGithub